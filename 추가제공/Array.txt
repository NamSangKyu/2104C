#include <iostream>
using namespace std;

template <typename T>
class Point 
{
private:
	T xpos, ypos;
public:
	Point(T x=0, T y=0) : xpos(x), ypos(y)
	{  }
	void ShowPosition() const
	{
		cout<<'['<<xpos<<", "<<ypos<<']'<<endl; 
	}
};
template <class T>
class Array
{
private:
	T list[50];
	int index;
public:
	Array()
	{
		index = 0;
	}
	//데이터를 추가
	bool insert(T obj)
	{
		if(index >= 50)
			return false;
		list[index++] = obj;
		return true;
	}
	//데이터를 검색 or 인덱스로 삭제
	bool deleteList(T obj)
	{
		for(int i=0;i<index;i++)
		{
			if(obj == list[i])
			{
				delete list[i];
				for(int j=i;j<index-1;j++)
					list[j] = list[j+1];
				list[index] = NULL;
				index--;
				return true;
			}
		}
		return false;
	}
	//데이터 검색
	T* getObject(int i)
	{
		if(i < index)
			return &list[i];
		return NULL;
	}
	void printAll()
	{
		for(int i=0;i<index;i++)
		{
			cout << list[i] << endl;
		}
	}
};





int main(void)
{
	Array<int> list1;
	list1.insert(1);
	list1.insert(3);
	list1.insert(2);
	list1.insert(4);
	list1.printAll();

	Array<Point<int> *> list2;
	list2.insert(new Point<int>(1,2));
	list2.insert(new Point<int>(3,4));
	list2.insert(new Point<int>(5,2));
	list2.insert(new Point<int>(7,1));
	list2.insert(new Point<int>(6,3));
	(*list2.getObject(2))->ShowPosition();
	return 0;
}